{"id":"../node_modules/three-stdlib/shaders/BleachBypassShader.js","dependencies":[{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/shaders/BleachBypassShader.js.map","includedInParent":true,"mtime":1713411650540},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/package.json","includedInParent":true,"mtime":1713413468250},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1713411650482}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BleachBypassShader = void 0;\nconst BleachBypassShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 base = texture2D( tDiffuse, vUv );\", \"\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\", \"\tfloat lum = dot( lumCoeff, base.rgb );\", \"\tvec3 blend = vec3( lum );\", \"\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\", \"\tvec3 result1 = 2.0 * base.rgb * blend;\", \"\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\", \"\tvec3 newColor = mix( result1, result2, L );\", \"\tfloat A2 = opacity * base.a;\", \"\tvec3 mixRGB = A2 * newColor.rgb;\", \"\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\", \"\tgl_FragColor = vec4( mixRGB, base.a );\", \"}\"].join(\"\\n\")\n};\nexports.BleachBypassShader = BleachBypassShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":7,"column":0}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":7,"column":6}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":7,"column":24}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":17,"column":55},"generated":{"line":7,"column":27}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":8,"column":2}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":8,"column":10}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":8,"column":12}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":9,"column":4}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":9,"column":12}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":9,"column":14}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":10,"column":6}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":10,"column":11}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":10,"column":13}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":11,"column":4}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":11,"column":5}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":12,"column":4}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":12,"column":11}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":12,"column":13}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":13,"column":6}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":13,"column":11}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":13,"column":13}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":14,"column":4}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":15,"column":2}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":15,"column":3}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":16,"column":2}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":16,"column":14}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":23,"column":16},"generated":{"line":16,"column":16}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":16,"column":17}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":16,"column":36}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":16,"column":38}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":16,"column":53}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":16,"column":55}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":16,"column":67}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":16,"column":69}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":16,"column":145}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":16,"column":147}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":16,"column":150}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":16,"column":151}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":16,"column":152}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":16,"column":156}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":16,"column":157}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":32,"column":13},"generated":{"line":16,"column":161}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":32,"column":13},"generated":{"line":16,"column":162}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":17,"column":2}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":17,"column":16}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":34,"column":18},"generated":{"line":17,"column":18}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":17,"column":19}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":17,"column":43}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":17,"column":45}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":17,"column":74}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":17,"column":76}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":17,"column":95}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":17,"column":97}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":17,"column":112}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":17,"column":114}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":17,"column":156}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":17,"column":158}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":17,"column":201}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":17,"column":203}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":17,"column":244}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":17,"column":246}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":17,"column":274}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":17,"column":276}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":17,"column":335}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":17,"column":337}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":17,"column":378}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":17,"column":380}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":17,"column":447}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":17,"column":449}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":17,"column":495}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":17,"column":497}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":17,"column":528}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":17,"column":530}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":17,"column":565}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":17,"column":567}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":17,"column":608}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":17,"column":610}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":17,"column":651}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":17,"column":653}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":17,"column":656}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":17,"column":657}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":17,"column":658}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":17,"column":662}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":17,"column":663}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":63,"column":13},"generated":{"line":17,"column":667}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":18,"column":0}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":18,"column":1}},{"source":"../../src/shaders/BleachBypassShader.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../../src/shaders/BleachBypassShader.ts":"/**\n * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\n * - based on Nvidia example\n * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\n */\n\nimport type { IUniform, Texture } from 'three'\nimport type { IShader } from './types'\n\nexport type BleachBypassShaderUniforms = {\n  opacity: IUniform<number>\n  tDiffuse: IUniform<Texture | null>\n}\n\nexport interface IBleachBypassShader extends IShader<BleachBypassShaderUniforms> {}\n\nexport const BleachBypassShader: IBleachBypassShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    opacity: { value: 1.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float opacity;',\n\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec4 base = texture2D( tDiffuse, vUv );',\n\n    '\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );',\n    '\tfloat lum = dot( lumCoeff, base.rgb );',\n    '\tvec3 blend = vec3( lum );',\n\n    '\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );',\n\n    '\tvec3 result1 = 2.0 * base.rgb * blend;',\n    '\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );',\n\n    '\tvec3 newColor = mix( result1, result2, L );',\n\n    '\tfloat A2 = opacity * base.a;',\n    '\tvec3 mixRGB = A2 * newColor.rgb;',\n    '\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );',\n\n    '\tgl_FragColor = vec4( mixRGB, base.a );',\n\n    '}',\n  ].join('\\n'),\n}\n"},"lineCount":null}},"error":null,"hash":"8ae44f27fe10f52e9cdc6ad1c3824cd4","cacheData":{"env":{}}}