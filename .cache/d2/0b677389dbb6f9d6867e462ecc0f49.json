{"id":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","dependencies":[{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/package.json","includedInParent":true,"mtime":1713413468250},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/@react-three/drei/node_modules/three-mesh-bvh/package.json","includedInParent":true,"mtime":1713411646436}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.common_functions = void 0;\nconst common_functions = /* glsl */`\n\n// A stack of uint32 indices can can store the indices for\n// a perfectly balanced tree with a depth up to 31. Lower stack\n// depth gets higher performance.\n//\n// However not all trees are balanced. Best value to set this to\n// is the trees max depth.\n#ifndef BVH_STACK_DEPTH\n#define BVH_STACK_DEPTH 60\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n`;\nexports.common_functions = common_functions;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":1,"column":7}},{"generated":{"line":7,"column":6},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":1,"column":13},"name":"common_functions"},{"generated":{"line":7,"column":22},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":1,"column":29}},{"generated":{"line":7,"column":25},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":1,"column":32}},{"generated":{"line":7,"column":35},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":1,"column":43}},{"generated":{"line":8,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":83,"column":0}},{"generated":{"line":89,"column":1},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":83,"column":1}},{"generated":{"line":90,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js","original":{"line":83,"column":2}}],"sources":{"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js":"export const common_functions = /* glsl */`\n\n// A stack of uint32 indices can can store the indices for\n// a perfectly balanced tree with a depth up to 31. Lower stack\n// depth gets higher performance.\n//\n// However not all trees are balanced. Best value to set this to\n// is the trees max depth.\n#ifndef BVH_STACK_DEPTH\n#define BVH_STACK_DEPTH 60\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n`;\n"},"lineCount":null}},"error":null,"hash":"32556365b5af25c13e6dc4cde40f6b2e","cacheData":{"env":{}}}