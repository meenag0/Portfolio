{"id":"../node_modules/three-stdlib/csm/CSMShader.js","dependencies":[{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/csm/CSMShader.js.map","includedInParent":true,"mtime":1713411650819},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/package.json","includedInParent":true,"mtime":1713413468250},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1713411650482},{"name":"three","loc":{"line":1,"column":28,"index":28},"parent":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/csm/CSMShader.js","resolved":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSMShader = void 0;\nvar _three = require(\"three\");\nconst CSMShader = {\n  lights_fragment_begin: /* glsl */\n  `\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\tvec2 cascade;\n\tfloat cascadeCenter;\n\tfloat closestEdge;\n\tfloat margin;\n\tfloat csmx;\n\tfloat csmy;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t  \t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\t\t// NOTE: Depth gets larger away from the camera.\n\t\t\t// cascade.x is closer, cascade.y is further\n\t\t\tcascade = CSM_cascades[ i ];\n\t\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\t\tcsmx = cascade.x - margin / 2.0;\n\t\t\tcsmy = cascade.y + margin / 2.0;\n\t\t\tif( linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\n\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t\t}\n\t  \t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\t#else\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if ( NUM_DIR_LIGHTS > NUM_DIR_LIGHT_SHADOWS)\n\t\t// compute the lights not casting shadows (if any)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = NUM_DIR_LIGHT_SHADOWS; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\n\t\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`,\n  getlights_pars_begin() {\n    return (/* glsl */\n      `\n\t\t\t#if defined( USE_CSM ) && defined( CSM_CASCADES )\n\t\t\tuniform vec2 CSM_cascades[CSM_CASCADES];\n\t\t\tuniform float cameraNear;\n\t\t\tuniform float shadowFar;\n\t\t\t#endif\n\n\t\t\t${_three.ShaderChunk.lights_pars_begin}\n\t\t`\n    );\n  }\n};\nexports.CSMShader = CSMShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":3,"column":5},"generated":{"line":8,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":3,"column":6},"generated":{"line":8,"column":6}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":3,"column":6},"generated":{"line":8,"column":15}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":3,"column":18},"generated":{"line":8,"column":18}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":2},"generated":{"line":9,"column":2}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":2},"generated":{"line":9,"column":23}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":2},"generated":{"line":9,"column":25}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":10,"column":2}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":11,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":12,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":13,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":14,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":15,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":16,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":17,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":18,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":19,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":20,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":21,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":22,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":23,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":24,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":25,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":26,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":27,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":28,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":29,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":30,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":31,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":32,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":33,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":34,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":35,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":36,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":37,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":38,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":39,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":40,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":41,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":42,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":43,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":44,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":45,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":46,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":47,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":48,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":49,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":50,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":51,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":52,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":53,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":54,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":55,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":56,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":57,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":58,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":59,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":60,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":61,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":62,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":63,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":64,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":65,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":66,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":67,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":68,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":69,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":70,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":71,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":72,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":73,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":74,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":75,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":76,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":77,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":78,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":79,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":80,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":81,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":82,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":83,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":84,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":85,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":86,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":87,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":88,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":89,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":90,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":91,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":92,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":93,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":94,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":95,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":96,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":97,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":98,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":99,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":100,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":101,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":102,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":103,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":104,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":105,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":106,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":107,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":108,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":109,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":110,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":111,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":112,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":113,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":114,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":115,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":116,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":117,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":118,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":119,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":120,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":121,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":122,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":123,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":124,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":125,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":126,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":127,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":128,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":129,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":130,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":131,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":132,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":133,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":134,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":135,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":136,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":137,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":138,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":139,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":140,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":141,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":142,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":143,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":144,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":145,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":146,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":147,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":148,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":149,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":150,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":151,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":152,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":153,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":154,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":155,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":156,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":157,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":158,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":159,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":160,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":161,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":162,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":163,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":164,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":165,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":166,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":167,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":168,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":169,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":170,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":171,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":172,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":173,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":174,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":175,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":176,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":177,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":178,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":179,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":180,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":181,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":182,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":183,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":184,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":185,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":186,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":187,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":188,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":189,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":190,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":191,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":192,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":193,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":194,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":195,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":196,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":197,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":198,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":199,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":200,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":201,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":202,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":203,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":204,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":205,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":206,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":207,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":208,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":209,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":210,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":211,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":212,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":213,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":214,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":215,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":216,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":217,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":218,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":219,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":220,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":221,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":222,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":223,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":224,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":225,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":226,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":227,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":228,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":229,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":230,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":231,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":232,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":233,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":234,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":235,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":236,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":237,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":238,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":239,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":240,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":241,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":242,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":243,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":244,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":245,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":246,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":247,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":4,"column":36},"generated":{"line":247,"column":1}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":242,"column":2},"generated":{"line":248,"column":2}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":242,"column":2},"generated":{"line":248,"column":22}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":242,"column":25},"generated":{"line":248,"column":25}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":4},"generated":{"line":249,"column":4}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":4},"generated":{"line":249,"column":11}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":250,"column":6}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":251,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":252,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":253,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":254,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":255,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":256,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":243,"column":22},"generated":{"line":257,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":250,"column":5},"generated":{"line":257,"column":5}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":250,"column":5},"generated":{"line":257,"column":23}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":250,"column":17},"generated":{"line":257,"column":24}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":250,"column":17},"generated":{"line":257,"column":41}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":250,"column":17},"generated":{"line":258,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":250,"column":17},"generated":{"line":259,"column":4}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":252,"column":3},"generated":{"line":260,"column":2}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":253,"column":0},"generated":{"line":261,"column":0}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":253,"column":0},"generated":{"line":261,"column":1}},{"source":"../../src/csm/CSMShader.js","name":null,"original":{"line":253,"column":0},"generated":{"line":262,"column":0}}],"sources":{"../../src/csm/CSMShader.js":"import { ShaderChunk } from 'three'\n\nconst CSMShader = {\n  lights_fragment_begin: /* glsl */ `\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\tvec2 cascade;\n\tfloat cascadeCenter;\n\tfloat closestEdge;\n\tfloat margin;\n\tfloat csmx;\n\tfloat csmy;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t  \t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\t\t// NOTE: Depth gets larger away from the camera.\n\t\t\t// cascade.x is closer, cascade.y is further\n\t\t\tcascade = CSM_cascades[ i ];\n\t\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\t\tcsmx = cascade.x - margin / 2.0;\n\t\t\tcsmy = cascade.y + margin / 2.0;\n\t\t\tif( linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\n\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t\t}\n\t  \t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\t#else\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if ( NUM_DIR_LIGHTS > NUM_DIR_LIGHT_SHADOWS)\n\t\t// compute the lights not casting shadows (if any)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = NUM_DIR_LIGHT_SHADOWS; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\n\t\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`,\n  getlights_pars_begin() {\n    return /* glsl */ `\n\t\t\t#if defined( USE_CSM ) && defined( CSM_CASCADES )\n\t\t\tuniform vec2 CSM_cascades[CSM_CASCADES];\n\t\t\tuniform float cameraNear;\n\t\t\tuniform float shadowFar;\n\t\t\t#endif\n\n\t\t\t${ShaderChunk.lights_pars_begin}\n\t\t`\n  },\n}\n\nexport { CSMShader }\n"},"lineCount":null}},"error":null,"hash":"2916fb1fa1698d4192c89c34fa2bde2b","cacheData":{"env":{}}}