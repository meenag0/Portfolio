{"id":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","dependencies":[{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/package.json","includedInParent":true,"mtime":1713413468250},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/@react-three/drei/node_modules/three-mesh-bvh/package.json","includedInParent":true,"mtime":1713411646436}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bvh_ray_functions = void 0;\nconst bvh_ray_functions = /* glsl */`\n\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n// Raycasting\nbool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tdist = max( t0, 0.0 );\n\n\treturn t1 >= dist;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// outputs\n\tinout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nbool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\\\n\tbvhIntersectFirstHit(\\\n\t\tbvh,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\\\n\t_bvhIntersectFirstHit(\\\n\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\n\nbool _bvhIntersectFirstHit(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables split into separate variables due to output precision\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = INFINITY;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance;\n\t\tif (\n\t\t\t! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )\n\t\t\t|| boundsHitDistance > triangleDistance\n\t\t) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count,\n\t\t\t\trayOrigin, rayDirection, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\nexports.bvh_ray_functions = bvh_ray_functions;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":1,"column":7}},{"generated":{"line":7,"column":6},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":1,"column":13},"name":"bvh_ray_functions"},{"generated":{"line":7,"column":23},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":1,"column":30}},{"generated":{"line":7,"column":26},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":1,"column":33}},{"generated":{"line":7,"column":36},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":166,"column":0}},{"generated":{"line":173,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":167,"column":0}},{"generated":{"line":174,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":168,"column":0}},{"generated":{"line":175,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":169,"column":0}},{"generated":{"line":176,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":170,"column":0}},{"generated":{"line":177,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":171,"column":0}},{"generated":{"line":178,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":172,"column":0}},{"generated":{"line":179,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":173,"column":0}},{"generated":{"line":180,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":174,"column":0}},{"generated":{"line":181,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":175,"column":0}},{"generated":{"line":182,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":176,"column":0}},{"generated":{"line":183,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":177,"column":0}},{"generated":{"line":184,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":178,"column":0}},{"generated":{"line":185,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":179,"column":0}},{"generated":{"line":186,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":180,"column":0}},{"generated":{"line":187,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":181,"column":0}},{"generated":{"line":188,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":182,"column":0}},{"generated":{"line":189,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":183,"column":0}},{"generated":{"line":190,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":184,"column":0}},{"generated":{"line":191,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":185,"column":0}},{"generated":{"line":192,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":186,"column":0}},{"generated":{"line":193,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":187,"column":0}},{"generated":{"line":194,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":188,"column":0}},{"generated":{"line":195,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":189,"column":0}},{"generated":{"line":196,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":190,"column":0}},{"generated":{"line":197,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":191,"column":0}},{"generated":{"line":198,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":192,"column":0}},{"generated":{"line":199,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":193,"column":0}},{"generated":{"line":200,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":194,"column":0}},{"generated":{"line":201,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":195,"column":0}},{"generated":{"line":202,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":196,"column":0}},{"generated":{"line":203,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":197,"column":0}},{"generated":{"line":204,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":198,"column":0}},{"generated":{"line":205,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":199,"column":0}},{"generated":{"line":206,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":200,"column":0}},{"generated":{"line":207,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":201,"column":0}},{"generated":{"line":208,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":202,"column":0}},{"generated":{"line":209,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":203,"column":0}},{"generated":{"line":210,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":204,"column":0}},{"generated":{"line":211,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":205,"column":0}},{"generated":{"line":212,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":206,"column":0}},{"generated":{"line":213,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":207,"column":0}},{"generated":{"line":214,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":208,"column":0}},{"generated":{"line":215,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":209,"column":0}},{"generated":{"line":216,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":210,"column":0}},{"generated":{"line":217,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":211,"column":0}},{"generated":{"line":218,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":212,"column":0}},{"generated":{"line":219,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":213,"column":0}},{"generated":{"line":219,"column":1},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":213,"column":1}},{"generated":{"line":220,"column":0},"source":"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js","original":{"line":213,"column":2}}],"sources":{"../node_modules/@react-three/drei/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js":"export const bvh_ray_functions = /* glsl */`\n\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n// Raycasting\nbool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tdist = max( t0, 0.0 );\n\n\treturn t1 >= dist;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// outputs\n\tinout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nbool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\\\n\tbvhIntersectFirstHit(\\\n\t\tbvh,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\\\n\t_bvhIntersectFirstHit(\\\n\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\n\nbool _bvhIntersectFirstHit(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables split into separate variables due to output precision\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = INFINITY;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance;\n\t\tif (\n\t\t\t! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )\n\t\t\t|| boundsHitDistance > triangleDistance\n\t\t) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count,\n\t\t\t\trayOrigin, rayDirection, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n"},"lineCount":null}},"error":null,"hash":"3c8e9103484a153cfadd1ed9743e65c7","cacheData":{"env":{}}}