{"id":"../node_modules/three-stdlib/shaders/VolumeShader.js","dependencies":[{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/shaders/VolumeShader.js.map","includedInParent":true,"mtime":1713411652168},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/package.json","includedInParent":true,"mtime":1713413468250},{"name":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1713411650482},{"name":"three","loc":{"line":1,"column":33,"index":33},"parent":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three-stdlib/shaders/VolumeShader.js","resolved":"/Users/meenakshigopalakrishnan/portfoliowebsite/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VolumeRenderShader1 = void 0;\nvar _three = require(\"three\");\nconst VolumeRenderShader1 = {\n  uniforms: {\n    u_size: {\n      value: new _three.Vector3(1, 1, 1)\n    },\n    u_renderstyle: {\n      value: 0\n    },\n    u_renderthreshold: {\n      value: 0.5\n    },\n    u_clim: {\n      value: new _three.Vector2(1, 1)\n    },\n    u_data: {\n      value: null\n    },\n    u_cmdata: {\n      value: null\n    }\n  },\n  vertexShader: [\"\t\tvarying vec4 v_nearpos;\", \"\t\tvarying vec4 v_farpos;\", \"\t\tvarying vec3 v_position;\", \"\t\tvoid main() {\",\n  // Prepare transforms to map to \"camera view\". See also:\n  // https://threejs.org/docs/#api/renderers/webgl/WebGLProgram\n  \"\t\t\t\tmat4 viewtransformf = modelViewMatrix;\", \"\t\t\t\tmat4 viewtransformi = inverse(modelViewMatrix);\",\n  // Project local vertex coordinate to camera position. Then do a step\n  // backward (in cam coords) to the near clipping plane, and project back. Do\n  // the same for the far clipping plane. This gives us all the information we\n  // need to calculate the ray and truncate it to the viewing cone.\n  \"\t\t\t\tvec4 position4 = vec4(position, 1.0);\", \"\t\t\t\tvec4 pos_in_cam = viewtransformf * position4;\",\n  // Intersection of ray and near clipping plane (z = -1 in clip coords)\n  \"\t\t\t\tpos_in_cam.z = -pos_in_cam.w;\", \"\t\t\t\tv_nearpos = viewtransformi * pos_in_cam;\",\n  // Intersection of ray and far clipping plane (z = +1 in clip coords)\n  \"\t\t\t\tpos_in_cam.z = pos_in_cam.w;\", \"\t\t\t\tv_farpos = viewtransformi * pos_in_cam;\",\n  // Set varyings and output pos\n  \"\t\t\t\tv_position = position;\", \"\t\t\t\tgl_Position = projectionMatrix * viewMatrix * modelMatrix * position4;\", \"\t\t}\"].join(\"\\n\"),\n  fragmentShader: [\"\t\tprecision highp float;\", \"\t\tprecision mediump sampler3D;\", \"\t\tuniform vec3 u_size;\", \"\t\tuniform int u_renderstyle;\", \"\t\tuniform float u_renderthreshold;\", \"\t\tuniform vec2 u_clim;\", \"\t\tuniform sampler3D u_data;\", \"\t\tuniform sampler2D u_cmdata;\", \"\t\tvarying vec3 v_position;\", \"\t\tvarying vec4 v_nearpos;\", \"\t\tvarying vec4 v_farpos;\",\n  // The maximum distance through our rendering volume is sqrt(3).\n  \"\t\tconst int MAX_STEPS = 887;\t// 887 for 512^3, 1774 for 1024^3\", \"\t\tconst int REFINEMENT_STEPS = 4;\", \"\t\tconst float relative_step_size = 1.0;\", \"\t\tconst vec4 ambient_color = vec4(0.2, 0.4, 0.2, 1.0);\", \"\t\tconst vec4 diffuse_color = vec4(0.8, 0.2, 0.2, 1.0);\", \"\t\tconst vec4 specular_color = vec4(1.0, 1.0, 1.0, 1.0);\", \"\t\tconst float shininess = 40.0;\", \"\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);\", \"\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);\", \"\t\tfloat sample1(vec3 texcoords);\", \"\t\tvec4 apply_colormap(float val);\", \"\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray);\", \"\t\tvoid main() {\",\n  // Normalize clipping plane info\n  \"\t\t\t\tvec3 farpos = v_farpos.xyz / v_farpos.w;\", \"\t\t\t\tvec3 nearpos = v_nearpos.xyz / v_nearpos.w;\",\n  // Calculate unit vector pointing in the view direction through this fragment.\n  \"\t\t\t\tvec3 view_ray = normalize(nearpos.xyz - farpos.xyz);\",\n  // Compute the (negative) distance to the front surface or near clipping plane.\n  // v_position is the back face of the cuboid, so the initial distance calculated in the dot\n  // product below is the distance from near clip plane to the back of the cuboid\n  \"\t\t\t\tfloat distance = dot(nearpos - v_position, view_ray);\", \"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.x) / view_ray.x,\", \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.x - 0.5 - v_position.x) / view_ray.x));\", \"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.y) / view_ray.y,\", \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.y - 0.5 - v_position.y) / view_ray.y));\", \"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.z) / view_ray.z,\", \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.z - 0.5 - v_position.z) / view_ray.z));\",\n  // Now we have the starting position on the front surface\n  \"\t\t\t\tvec3 front = v_position + view_ray * distance;\",\n  // Decide how many steps to take\n  \"\t\t\t\tint nsteps = int(-distance / relative_step_size + 0.5);\", \"\t\t\t\tif ( nsteps < 1 )\", \"\t\t\t\t\t\tdiscard;\",\n  // Get starting location and step vector in texture coordinates\n  \"\t\t\t\tvec3 step = ((v_position - front) / u_size) / float(nsteps);\", \"\t\t\t\tvec3 start_loc = front / u_size;\",\n  // For testing: show the number of steps. This helps to establish\n  // whether the rays are correctly oriented\n  //'gl_FragColor = vec4(0.0, float(nsteps) / 1.0 / u_size.x, 1.0, 1.0);',\n  //'return;',\n  \"\t\t\t\tif (u_renderstyle == 0)\", \"\t\t\t\t\t\tcast_mip(start_loc, step, nsteps, view_ray);\", \"\t\t\t\telse if (u_renderstyle == 1)\", \"\t\t\t\t\t\tcast_iso(start_loc, step, nsteps, view_ray);\", \"\t\t\t\tif (gl_FragColor.a < 0.05)\", \"\t\t\t\t\t\tdiscard;\", \"\t\t}\", \"\t\tfloat sample1(vec3 texcoords) {\", \"\t\t\t\t/* Sample float value from a 3D texture. Assumes intensity data. */\", \"\t\t\t\treturn texture(u_data, texcoords.xyz).r;\", \"\t\t}\", \"\t\tvec4 apply_colormap(float val) {\", \"\t\t\t\tval = (val - u_clim[0]) / (u_clim[1] - u_clim[0]);\", \"\t\t\t\treturn texture2D(u_cmdata, vec2(val, 0.5));\", \"\t\t}\", \"\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {\", \"\t\t\t\tfloat max_val = -1e6;\", \"\t\t\t\tint max_i = 100;\", \"\t\t\t\tvec3 loc = start_loc;\",\n  // Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n  // non-constant expression. So we use a hard-coded max, and an additional condition\n  // inside the loop.\n  \"\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {\", \"\t\t\t\t\t\tif (iter >= nsteps)\", \"\t\t\t\t\t\t\t\tbreak;\",\n  // Sample from the 3D texture\n  \"\t\t\t\t\t\tfloat val = sample1(loc);\",\n  // Apply MIP operation\n  \"\t\t\t\t\t\tif (val > max_val) {\", \"\t\t\t\t\t\t\t\tmax_val = val;\", \"\t\t\t\t\t\t\t\tmax_i = iter;\", \"\t\t\t\t\t\t}\",\n  // Advance location deeper into the volume\n  \"\t\t\t\t\t\tloc += step;\", \"\t\t\t\t}\",\n  // Refine location, gives crispier images\n  \"\t\t\t\tvec3 iloc = start_loc + step * (float(max_i) - 0.5);\", \"\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);\", \"\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {\", \"\t\t\t\t\t\tmax_val = max(max_val, sample1(iloc));\", \"\t\t\t\t\t\tiloc += istep;\", \"\t\t\t\t}\",\n  // Resolve final color\n  \"\t\t\t\tgl_FragColor = apply_colormap(max_val);\", \"\t\t}\", \"\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {\", \"\t\t\t\tgl_FragColor = vec4(0.0);\t// init transparent\", \"\t\t\t\tvec4 color3 = vec4(0.0);\t// final color\", \"\t\t\t\tvec3 dstep = 1.5 / u_size;\t// step to sample derivative\", \"\t\t\t\tvec3 loc = start_loc;\", \"\t\t\t\tfloat low_threshold = u_renderthreshold - 0.02 * (u_clim[1] - u_clim[0]);\",\n  // Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n  // non-constant expression. So we use a hard-coded max, and an additional condition\n  // inside the loop.\n  \"\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {\", \"\t\t\t\t\t\tif (iter >= nsteps)\", \"\t\t\t\t\t\t\t\tbreak;\",\n  // Sample from the 3D texture\n  \"\t\t\t\t\t\tfloat val = sample1(loc);\", \"\t\t\t\t\t\tif (val > low_threshold) {\",\n  // Take the last interval in smaller steps\n  \"\t\t\t\t\t\t\t\tvec3 iloc = loc - 0.5 * step;\", \"\t\t\t\t\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);\", \"\t\t\t\t\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {\", \"\t\t\t\t\t\t\t\t\t\tval = sample1(iloc);\", \"\t\t\t\t\t\t\t\t\t\tif (val > u_renderthreshold) {\", \"\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = add_lighting(val, iloc, dstep, view_ray);\", \"\t\t\t\t\t\t\t\t\t\t\t\treturn;\", \"\t\t\t\t\t\t\t\t\t\t}\", \"\t\t\t\t\t\t\t\t\t\tiloc += istep;\", \"\t\t\t\t\t\t\t\t}\", \"\t\t\t\t\t\t}\",\n  // Advance location deeper into the volume\n  \"\t\t\t\t\t\tloc += step;\", \"\t\t\t\t}\", \"\t\t}\", \"\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray)\", \"\t\t{\",\n  // Calculate color by incorporating lighting\n  // View direction\n  \"\t\t\t\tvec3 V = normalize(view_ray);\",\n  // calculate normal vector from gradient\n  \"\t\t\t\tvec3 N;\", \"\t\t\t\tfloat val1, val2;\", \"\t\t\t\tval1 = sample1(loc + vec3(-step[0], 0.0, 0.0));\", \"\t\t\t\tval2 = sample1(loc + vec3(+step[0], 0.0, 0.0));\", \"\t\t\t\tN[0] = val1 - val2;\", \"\t\t\t\tval = max(max(val1, val2), val);\", \"\t\t\t\tval1 = sample1(loc + vec3(0.0, -step[1], 0.0));\", \"\t\t\t\tval2 = sample1(loc + vec3(0.0, +step[1], 0.0));\", \"\t\t\t\tN[1] = val1 - val2;\", \"\t\t\t\tval = max(max(val1, val2), val);\", \"\t\t\t\tval1 = sample1(loc + vec3(0.0, 0.0, -step[2]));\", \"\t\t\t\tval2 = sample1(loc + vec3(0.0, 0.0, +step[2]));\", \"\t\t\t\tN[2] = val1 - val2;\", \"\t\t\t\tval = max(max(val1, val2), val);\", \"\t\t\t\tfloat gm = length(N); // gradient magnitude\", \"\t\t\t\tN = normalize(N);\",\n  // Flip normal so it points towards viewer\n  \"\t\t\t\tfloat Nselect = float(dot(N, V) > 0.0);\", \"\t\t\t\tN = (2.0 * Nselect - 1.0) * N;\t// ==\tNselect * N - (1.0-Nselect)*N;\",\n  // Init colors\n  \"\t\t\t\tvec4 ambient_color = vec4(0.0, 0.0, 0.0, 0.0);\", \"\t\t\t\tvec4 diffuse_color = vec4(0.0, 0.0, 0.0, 0.0);\", \"\t\t\t\tvec4 specular_color = vec4(0.0, 0.0, 0.0, 0.0);\",\n  // note: could allow multiple lights\n  \"\t\t\t\tfor (int i=0; i<1; i++)\", \"\t\t\t\t{\",\n  // Get light direction (make sure to prevent zero devision)\n  \"\t\t\t\t\t\tvec3 L = normalize(view_ray);\t//lightDirs[i];\", \"\t\t\t\t\t\tfloat lightEnabled = float( length(L) > 0.0 );\", \"\t\t\t\t\t\tL = normalize(L + (1.0 - lightEnabled));\",\n  // Calculate lighting properties\n  \"\t\t\t\t\t\tfloat lambertTerm = clamp(dot(N, L), 0.0, 1.0);\", \"\t\t\t\t\t\tvec3 H = normalize(L+V); // Halfway vector\", \"\t\t\t\t\t\tfloat specularTerm = pow(max(dot(H, N), 0.0), shininess);\",\n  // Calculate mask\n  \"\t\t\t\t\t\tfloat mask1 = lightEnabled;\",\n  // Calculate colors\n  \"\t\t\t\t\t\tambient_color +=\tmask1 * ambient_color;\t// * gl_LightSource[i].ambient;\", \"\t\t\t\t\t\tdiffuse_color +=\tmask1 * lambertTerm;\", \"\t\t\t\t\t\tspecular_color += mask1 * specularTerm * specular_color;\", \"\t\t\t\t}\",\n  // Calculate final color by componing different components\n  \"\t\t\t\tvec4 final_color;\", \"\t\t\t\tvec4 color = apply_colormap(val);\", \"\t\t\t\tfinal_color = color * (ambient_color + diffuse_color) + specular_color;\", \"\t\t\t\tfinal_color.a = color.a;\", \"\t\t\t\treturn final_color;\", \"\t\t}\"].join(\"\\n\")\n};\nexports.VolumeRenderShader1 = VolumeRenderShader1;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":8,"column":0}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":8,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":8,"column":25}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":9,"column":35},"generated":{"line":8,"column":28}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":9,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":9,"column":10}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":9,"column":12}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":10,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":10,"column":10}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":10,"column":12}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":11,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":11,"column":11}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":11,"column":13}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":11,"column":17}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":11,"column":31}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":11,"column":32}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":11,"column":33}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":36},"generated":{"line":11,"column":35}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":36},"generated":{"line":11,"column":36}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":39},"generated":{"line":11,"column":38}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":40},"generated":{"line":11,"column":39}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":12,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":12,"column":5}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":13,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":13,"column":17}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":13,"column":19}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":21},"generated":{"line":14,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":21},"generated":{"line":14,"column":11}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":28},"generated":{"line":14,"column":13}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":15,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":15,"column":5}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":16,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":16,"column":21}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":23},"generated":{"line":16,"column":23}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":25},"generated":{"line":17,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":25},"generated":{"line":17,"column":11}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":32},"generated":{"line":17,"column":13}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":36},"generated":{"line":18,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":13,"column":36},"generated":{"line":18,"column":5}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":19,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":19,"column":10}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":19,"column":12}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":20,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":20,"column":11}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":20,"column":13}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":25},"generated":{"line":20,"column":17}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":25},"generated":{"line":20,"column":31}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":20,"column":32}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":20,"column":33}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":36},"generated":{"line":20,"column":35}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":37},"generated":{"line":20,"column":36}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":39},"generated":{"line":21,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":14,"column":39},"generated":{"line":21,"column":5}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":22,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":22,"column":10}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":22,"column":12}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":23,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":23,"column":11}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":21},"generated":{"line":23,"column":13}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":26},"generated":{"line":24,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":15,"column":26},"generated":{"line":24,"column":5}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":25,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":25,"column":12}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":25,"column":14}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":26,"column":6}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":26,"column":11}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":23},"generated":{"line":26,"column":13}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":16,"column":28},"generated":{"line":27,"column":4}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":28,"column":3}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":29,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":29,"column":14}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":29,"column":16}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":29,"column":17}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":29,"column":44}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":29,"column":46}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":29,"column":72}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":29,"column":74}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":29,"column":102}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":29,"column":104}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":29,"column":121}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":30,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":31,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":32,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":32,"column":46}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":32,"column":48}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":32,"column":101}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":33,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":34,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":35,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":36,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":37,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":37,"column":45}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":37,"column":47}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":37,"column":98}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":38,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":39,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":39,"column":37}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":39,"column":39}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":39,"column":85}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":40,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":41,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":41,"column":36}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":41,"column":38}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":41,"column":83}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":42,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":43,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":43,"column":30}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":43,"column":32}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":43,"column":108}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":43,"column":110}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":43,"column":115}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":43,"column":116}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":43,"column":117}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":43,"column":121}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":43,"column":122}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":43,"column":126}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":43,"column":127}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":44,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":44,"column":16}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":44,"column":18}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":44,"column":19}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":44,"column":45}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":44,"column":47}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":44,"column":79}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":44,"column":81}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":44,"column":105}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":44,"column":107}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":44,"column":137}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":44,"column":139}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":44,"column":175}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":44,"column":177}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":44,"column":201}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":44,"column":203}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":44,"column":232}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":44,"column":234}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":44,"column":265}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":44,"column":267}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":44,"column":295}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":44,"column":297}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":44,"column":324}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":44,"column":326}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":44,"column":352}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":45,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":66,"column":4},"generated":{"line":46,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":66,"column":4},"generated":{"line":46,"column":66}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":46,"column":68}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":46,"column":103}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":46,"column":105}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":46,"column":146}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":46,"column":148}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":46,"column":204}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":46,"column":206}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":46,"column":262}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":46,"column":264}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":46,"column":321}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":46,"column":323}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":46,"column":356}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":74,"column":4},"generated":{"line":46,"column":358}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":74,"column":4},"generated":{"line":46,"column":430}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":75,"column":4},"generated":{"line":46,"column":432}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":75,"column":4},"generated":{"line":46,"column":504}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":46,"column":506}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":46,"column":540}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":46,"column":542}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":46,"column":577}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":46,"column":579}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":46,"column":648}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":46,"column":650}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":46,"column":667}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":47,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":83,"column":4},"generated":{"line":48,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":83,"column":4},"generated":{"line":48,"column":48}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":48,"column":50}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":48,"column":99}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":49,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":50,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":50,"column":60}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":51,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":52,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":53,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":54,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":54,"column":61}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":54,"column":63}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":54,"column":133}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":54,"column":135}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":54,"column":202}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":54,"column":204}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":54,"column":274}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":54,"column":276}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":54,"column":343}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":97,"column":4},"generated":{"line":54,"column":345}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":97,"column":4},"generated":{"line":54,"column":415}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":98,"column":4},"generated":{"line":54,"column":417}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":98,"column":4},"generated":{"line":54,"column":484}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":98,"column":4},"generated":{"line":55,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":56,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":56,"column":54}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":57,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":104,"column":4},"generated":{"line":58,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":104,"column":4},"generated":{"line":58,"column":63}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":58,"column":65}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":58,"column":88}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":58,"column":90}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":58,"column":106}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":59,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":60,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":109,"column":4},"generated":{"line":60,"column":68}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":60,"column":70}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":60,"column":108}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":61,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":62,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":63,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":110,"column":4},"generated":{"line":64,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":65,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":65,"column":31}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":65,"column":33}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":118,"column":4},"generated":{"line":65,"column":85}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":119,"column":4},"generated":{"line":65,"column":87}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":119,"column":4},"generated":{"line":65,"column":121}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":120,"column":4},"generated":{"line":65,"column":123}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":120,"column":4},"generated":{"line":65,"column":175}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":65,"column":177}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":65,"column":209}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":65,"column":211}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":65,"column":227}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":65,"column":229}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":65,"column":234}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":126,"column":4},"generated":{"line":65,"column":236}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":126,"column":4},"generated":{"line":65,"column":271}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":65,"column":273}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":65,"column":346}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":65,"column":348}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":65,"column":394}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":129,"column":4},"generated":{"line":65,"column":396}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":129,"column":4},"generated":{"line":65,"column":401}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":131,"column":4},"generated":{"line":65,"column":403}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":131,"column":4},"generated":{"line":65,"column":439}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":65,"column":441}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":65,"column":497}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":133,"column":4},"generated":{"line":65,"column":499}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":133,"column":4},"generated":{"line":65,"column":548}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":65,"column":550}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":65,"column":555}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":65,"column":557}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":65,"column":630}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":138,"column":4},"generated":{"line":65,"column":632}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":138,"column":4},"generated":{"line":65,"column":659}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":139,"column":4},"generated":{"line":65,"column":661}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":139,"column":4},"generated":{"line":65,"column":683}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":65,"column":685}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":65,"column":712}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":66,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":67,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":68,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":145,"column":4},"generated":{"line":69,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":145,"column":4},"generated":{"line":69,"column":50}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":146,"column":4},"generated":{"line":69,"column":52}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":146,"column":4},"generated":{"line":69,"column":79}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":147,"column":4},"generated":{"line":69,"column":81}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":147,"column":4},"generated":{"line":69,"column":97}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":147,"column":4},"generated":{"line":70,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":149,"column":4},"generated":{"line":71,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":149,"column":4},"generated":{"line":71,"column":35}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":149,"column":4},"generated":{"line":72,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":151,"column":4},"generated":{"line":73,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":151,"column":4},"generated":{"line":73,"column":30}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":152,"column":4},"generated":{"line":73,"column":32}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":152,"column":4},"generated":{"line":73,"column":56}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":153,"column":4},"generated":{"line":73,"column":58}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":153,"column":4},"generated":{"line":73,"column":81}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":154,"column":4},"generated":{"line":73,"column":83}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":154,"column":4},"generated":{"line":73,"column":92}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":154,"column":4},"generated":{"line":74,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":156,"column":4},"generated":{"line":75,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":156,"column":4},"generated":{"line":75,"column":22}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":75,"column":24}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":75,"column":31}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":76,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":160,"column":4},"generated":{"line":77,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":160,"column":4},"generated":{"line":77,"column":60}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":161,"column":4},"generated":{"line":77,"column":62}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":161,"column":4},"generated":{"line":77,"column":112}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":77,"column":114}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":77,"column":160}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":163,"column":4},"generated":{"line":77,"column":162}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":163,"column":4},"generated":{"line":77,"column":208}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":164,"column":4},"generated":{"line":77,"column":210}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":164,"column":4},"generated":{"line":77,"column":232}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":165,"column":4},"generated":{"line":77,"column":234}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":165,"column":4},"generated":{"line":77,"column":241}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":165,"column":4},"generated":{"line":78,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":168,"column":4},"generated":{"line":79,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":168,"column":4},"generated":{"line":79,"column":47}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":169,"column":4},"generated":{"line":79,"column":49}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":169,"column":4},"generated":{"line":79,"column":54}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":171,"column":4},"generated":{"line":79,"column":56}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":171,"column":4},"generated":{"line":79,"column":129}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":173,"column":4},"generated":{"line":79,"column":131}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":173,"column":4},"generated":{"line":79,"column":182}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":174,"column":4},"generated":{"line":79,"column":184}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":174,"column":4},"generated":{"line":79,"column":229}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":175,"column":4},"generated":{"line":79,"column":231}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":175,"column":4},"generated":{"line":79,"column":292}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":176,"column":4},"generated":{"line":79,"column":294}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":176,"column":4},"generated":{"line":79,"column":321}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":178,"column":4},"generated":{"line":79,"column":323}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":178,"column":4},"generated":{"line":79,"column":402}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":178,"column":4},"generated":{"line":80,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":178,"column":4},"generated":{"line":81,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":178,"column":4},"generated":{"line":82,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":183,"column":4},"generated":{"line":83,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":183,"column":4},"generated":{"line":83,"column":50}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":184,"column":4},"generated":{"line":83,"column":52}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":184,"column":4},"generated":{"line":83,"column":79}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":185,"column":4},"generated":{"line":83,"column":81}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":185,"column":4},"generated":{"line":83,"column":97}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":185,"column":4},"generated":{"line":84,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":188,"column":4},"generated":{"line":85,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":188,"column":4},"generated":{"line":85,"column":35}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":190,"column":4},"generated":{"line":85,"column":37}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":190,"column":4},"generated":{"line":85,"column":71}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":190,"column":4},"generated":{"line":86,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":192,"column":4},"generated":{"line":87,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":192,"column":4},"generated":{"line":87,"column":41}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":87,"column":43}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":87,"column":97}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":194,"column":4},"generated":{"line":87,"column":99}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":194,"column":4},"generated":{"line":87,"column":149}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":195,"column":4},"generated":{"line":87,"column":151}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":195,"column":4},"generated":{"line":87,"column":183}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":196,"column":4},"generated":{"line":87,"column":185}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":196,"column":4},"generated":{"line":87,"column":227}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":197,"column":4},"generated":{"line":87,"column":229}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":197,"column":4},"generated":{"line":87,"column":299}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":198,"column":4},"generated":{"line":87,"column":301}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":198,"column":4},"generated":{"line":87,"column":322}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":199,"column":4},"generated":{"line":87,"column":324}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":199,"column":4},"generated":{"line":87,"column":337}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":200,"column":4},"generated":{"line":87,"column":339}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":200,"column":4},"generated":{"line":87,"column":365}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":201,"column":4},"generated":{"line":87,"column":367}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":201,"column":4},"generated":{"line":87,"column":378}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":202,"column":4},"generated":{"line":87,"column":380}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":202,"column":4},"generated":{"line":87,"column":389}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":202,"column":4},"generated":{"line":88,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":205,"column":4},"generated":{"line":89,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":205,"column":4},"generated":{"line":89,"column":22}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":206,"column":4},"generated":{"line":89,"column":24}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":206,"column":4},"generated":{"line":89,"column":31}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":207,"column":4},"generated":{"line":89,"column":33}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":207,"column":4},"generated":{"line":89,"column":38}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":209,"column":4},"generated":{"line":89,"column":40}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":209,"column":4},"generated":{"line":89,"column":108}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":210,"column":4},"generated":{"line":89,"column":110}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":210,"column":4},"generated":{"line":89,"column":115}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":210,"column":4},"generated":{"line":90,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":210,"column":4},"generated":{"line":91,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":214,"column":4},"generated":{"line":92,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":214,"column":4},"generated":{"line":92,"column":37}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":214,"column":4},"generated":{"line":93,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":217,"column":4},"generated":{"line":94,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":217,"column":4},"generated":{"line":94,"column":15}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":218,"column":4},"generated":{"line":94,"column":17}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":218,"column":4},"generated":{"line":94,"column":40}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":219,"column":4},"generated":{"line":94,"column":42}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":219,"column":4},"generated":{"line":94,"column":95}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":220,"column":4},"generated":{"line":94,"column":97}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":220,"column":4},"generated":{"line":94,"column":150}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":221,"column":4},"generated":{"line":94,"column":152}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":221,"column":4},"generated":{"line":94,"column":177}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":222,"column":4},"generated":{"line":94,"column":179}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":222,"column":4},"generated":{"line":94,"column":217}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":223,"column":4},"generated":{"line":94,"column":219}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":223,"column":4},"generated":{"line":94,"column":272}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":224,"column":4},"generated":{"line":94,"column":274}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":224,"column":4},"generated":{"line":94,"column":327}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":225,"column":4},"generated":{"line":94,"column":329}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":225,"column":4},"generated":{"line":94,"column":354}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":226,"column":4},"generated":{"line":94,"column":356}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":226,"column":4},"generated":{"line":94,"column":394}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":227,"column":4},"generated":{"line":94,"column":396}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":227,"column":4},"generated":{"line":94,"column":449}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":228,"column":4},"generated":{"line":94,"column":451}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":228,"column":4},"generated":{"line":94,"column":504}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":94,"column":506}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":94,"column":531}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":230,"column":4},"generated":{"line":94,"column":533}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":230,"column":4},"generated":{"line":94,"column":571}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":232,"column":4},"generated":{"line":94,"column":573}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":232,"column":4},"generated":{"line":94,"column":622}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":94,"column":624}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":94,"column":647}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":95,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":236,"column":4},"generated":{"line":96,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":236,"column":4},"generated":{"line":96,"column":47}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":237,"column":4},"generated":{"line":96,"column":49}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":237,"column":4},"generated":{"line":96,"column":122}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":237,"column":4},"generated":{"line":97,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":240,"column":4},"generated":{"line":98,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":240,"column":4},"generated":{"line":98,"column":54}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":241,"column":4},"generated":{"line":98,"column":56}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":241,"column":4},"generated":{"line":98,"column":108}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":242,"column":4},"generated":{"line":98,"column":110}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":242,"column":4},"generated":{"line":98,"column":163}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":242,"column":4},"generated":{"line":99,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":245,"column":4},"generated":{"line":100,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":245,"column":4},"generated":{"line":100,"column":31}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":100,"column":33}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":100,"column":40}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":101,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":102,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":102,"column":55}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":249,"column":4},"generated":{"line":102,"column":57}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":249,"column":4},"generated":{"line":102,"column":111}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":250,"column":4},"generated":{"line":102,"column":113}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":250,"column":4},"generated":{"line":102,"column":161}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":250,"column":4},"generated":{"line":103,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":253,"column":4},"generated":{"line":104,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":253,"column":4},"generated":{"line":104,"column":57}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":254,"column":4},"generated":{"line":104,"column":59}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":254,"column":4},"generated":{"line":104,"column":109}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":255,"column":4},"generated":{"line":104,"column":111}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":255,"column":4},"generated":{"line":104,"column":176}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":255,"column":4},"generated":{"line":105,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":258,"column":4},"generated":{"line":106,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":258,"column":4},"generated":{"line":106,"column":37}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":258,"column":4},"generated":{"line":107,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":261,"column":4},"generated":{"line":108,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":261,"column":4},"generated":{"line":108,"column":81}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":262,"column":4},"generated":{"line":108,"column":83}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":262,"column":4},"generated":{"line":108,"column":128}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":263,"column":4},"generated":{"line":108,"column":130}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":263,"column":4},"generated":{"line":108,"column":194}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":264,"column":4},"generated":{"line":108,"column":196}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":264,"column":4},"generated":{"line":108,"column":203}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":264,"column":4},"generated":{"line":109,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":267,"column":4},"generated":{"line":110,"column":2}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":267,"column":4},"generated":{"line":110,"column":25}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":268,"column":4},"generated":{"line":110,"column":27}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":268,"column":4},"generated":{"line":110,"column":66}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":269,"column":4},"generated":{"line":110,"column":68}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":269,"column":4},"generated":{"line":110,"column":145}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":270,"column":4},"generated":{"line":110,"column":147}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":270,"column":4},"generated":{"line":110,"column":177}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":271,"column":4},"generated":{"line":110,"column":179}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":271,"column":4},"generated":{"line":110,"column":204}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":272,"column":4},"generated":{"line":110,"column":206}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":272,"column":4},"generated":{"line":110,"column":211}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":272,"column":4},"generated":{"line":110,"column":212}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":273,"column":4},"generated":{"line":110,"column":213}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":273,"column":4},"generated":{"line":110,"column":217}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":273,"column":9},"generated":{"line":110,"column":218}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":273,"column":13},"generated":{"line":110,"column":222}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":274,"column":0},"generated":{"line":111,"column":0}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":274,"column":0},"generated":{"line":111,"column":1}},{"source":"../../src/shaders/VolumeShader.ts","name":null,"original":{"line":274,"column":0},"generated":{"line":112,"column":0}}],"sources":{"../../src/shaders/VolumeShader.ts":"import { Vector2, Vector3 } from 'three'\n\n/**\n * Shaders to render 3D volumes using raycasting.\n * The applied techniques are based on similar implementations in the Visvis and Vispy projects.\n * This is not the only approach, therefore it's marked 1.\n */\n\nexport const VolumeRenderShader1 = {\n  uniforms: {\n    u_size: { value: new Vector3(1, 1, 1) },\n    u_renderstyle: { value: 0 },\n    u_renderthreshold: { value: 0.5 },\n    u_clim: { value: new Vector2(1, 1) },\n    u_data: { value: null },\n    u_cmdata: { value: null },\n  },\n  vertexShader: [\n    '\t\tvarying vec4 v_nearpos;',\n    '\t\tvarying vec4 v_farpos;',\n    '\t\tvarying vec3 v_position;',\n\n    '\t\tvoid main() {',\n    // Prepare transforms to map to \"camera view\". See also:\n    // https://threejs.org/docs/#api/renderers/webgl/WebGLProgram\n    '\t\t\t\tmat4 viewtransformf = modelViewMatrix;',\n    '\t\t\t\tmat4 viewtransformi = inverse(modelViewMatrix);',\n\n    // Project local vertex coordinate to camera position. Then do a step\n    // backward (in cam coords) to the near clipping plane, and project back. Do\n    // the same for the far clipping plane. This gives us all the information we\n    // need to calculate the ray and truncate it to the viewing cone.\n    '\t\t\t\tvec4 position4 = vec4(position, 1.0);',\n    '\t\t\t\tvec4 pos_in_cam = viewtransformf * position4;',\n\n    // Intersection of ray and near clipping plane (z = -1 in clip coords)\n    '\t\t\t\tpos_in_cam.z = -pos_in_cam.w;',\n    '\t\t\t\tv_nearpos = viewtransformi * pos_in_cam;',\n\n    // Intersection of ray and far clipping plane (z = +1 in clip coords)\n    '\t\t\t\tpos_in_cam.z = pos_in_cam.w;',\n    '\t\t\t\tv_farpos = viewtransformi * pos_in_cam;',\n\n    // Set varyings and output pos\n    '\t\t\t\tv_position = position;',\n    '\t\t\t\tgl_Position = projectionMatrix * viewMatrix * modelMatrix * position4;',\n    '\t\t}',\n  ].join('\\n'),\n  fragmentShader: [\n    '\t\tprecision highp float;',\n    '\t\tprecision mediump sampler3D;',\n\n    '\t\tuniform vec3 u_size;',\n    '\t\tuniform int u_renderstyle;',\n    '\t\tuniform float u_renderthreshold;',\n    '\t\tuniform vec2 u_clim;',\n\n    '\t\tuniform sampler3D u_data;',\n    '\t\tuniform sampler2D u_cmdata;',\n\n    '\t\tvarying vec3 v_position;',\n    '\t\tvarying vec4 v_nearpos;',\n    '\t\tvarying vec4 v_farpos;',\n\n    // The maximum distance through our rendering volume is sqrt(3).\n    '\t\tconst int MAX_STEPS = 887;\t// 887 for 512^3, 1774 for 1024^3',\n    '\t\tconst int REFINEMENT_STEPS = 4;',\n    '\t\tconst float relative_step_size = 1.0;',\n    '\t\tconst vec4 ambient_color = vec4(0.2, 0.4, 0.2, 1.0);',\n    '\t\tconst vec4 diffuse_color = vec4(0.8, 0.2, 0.2, 1.0);',\n    '\t\tconst vec4 specular_color = vec4(1.0, 1.0, 1.0, 1.0);',\n    '\t\tconst float shininess = 40.0;',\n\n    '\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);',\n    '\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);',\n\n    '\t\tfloat sample1(vec3 texcoords);',\n    '\t\tvec4 apply_colormap(float val);',\n    '\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray);',\n\n    '\t\tvoid main() {',\n    // Normalize clipping plane info\n    '\t\t\t\tvec3 farpos = v_farpos.xyz / v_farpos.w;',\n    '\t\t\t\tvec3 nearpos = v_nearpos.xyz / v_nearpos.w;',\n\n    // Calculate unit vector pointing in the view direction through this fragment.\n    '\t\t\t\tvec3 view_ray = normalize(nearpos.xyz - farpos.xyz);',\n\n    // Compute the (negative) distance to the front surface or near clipping plane.\n    // v_position is the back face of the cuboid, so the initial distance calculated in the dot\n    // product below is the distance from near clip plane to the back of the cuboid\n    '\t\t\t\tfloat distance = dot(nearpos - v_position, view_ray);',\n    '\t\t\t\tdistance = max(distance, min((-0.5 - v_position.x) / view_ray.x,',\n    '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.x - 0.5 - v_position.x) / view_ray.x));',\n    '\t\t\t\tdistance = max(distance, min((-0.5 - v_position.y) / view_ray.y,',\n    '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.y - 0.5 - v_position.y) / view_ray.y));',\n    '\t\t\t\tdistance = max(distance, min((-0.5 - v_position.z) / view_ray.z,',\n    '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.z - 0.5 - v_position.z) / view_ray.z));',\n\n    // Now we have the starting position on the front surface\n    '\t\t\t\tvec3 front = v_position + view_ray * distance;',\n\n    // Decide how many steps to take\n    '\t\t\t\tint nsteps = int(-distance / relative_step_size + 0.5);',\n    '\t\t\t\tif ( nsteps < 1 )',\n    '\t\t\t\t\t\tdiscard;',\n\n    // Get starting location and step vector in texture coordinates\n    '\t\t\t\tvec3 step = ((v_position - front) / u_size) / float(nsteps);',\n    '\t\t\t\tvec3 start_loc = front / u_size;',\n\n    // For testing: show the number of steps. This helps to establish\n    // whether the rays are correctly oriented\n    //'gl_FragColor = vec4(0.0, float(nsteps) / 1.0 / u_size.x, 1.0, 1.0);',\n    //'return;',\n\n    '\t\t\t\tif (u_renderstyle == 0)',\n    '\t\t\t\t\t\tcast_mip(start_loc, step, nsteps, view_ray);',\n    '\t\t\t\telse if (u_renderstyle == 1)',\n    '\t\t\t\t\t\tcast_iso(start_loc, step, nsteps, view_ray);',\n\n    '\t\t\t\tif (gl_FragColor.a < 0.05)',\n    '\t\t\t\t\t\tdiscard;',\n    '\t\t}',\n\n    '\t\tfloat sample1(vec3 texcoords) {',\n    '\t\t\t\t/* Sample float value from a 3D texture. Assumes intensity data. */',\n    '\t\t\t\treturn texture(u_data, texcoords.xyz).r;',\n    '\t\t}',\n\n    '\t\tvec4 apply_colormap(float val) {',\n    '\t\t\t\tval = (val - u_clim[0]) / (u_clim[1] - u_clim[0]);',\n    '\t\t\t\treturn texture2D(u_cmdata, vec2(val, 0.5));',\n    '\t\t}',\n\n    '\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {',\n\n    '\t\t\t\tfloat max_val = -1e6;',\n    '\t\t\t\tint max_i = 100;',\n    '\t\t\t\tvec3 loc = start_loc;',\n\n    // Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n    // non-constant expression. So we use a hard-coded max, and an additional condition\n    // inside the loop.\n    '\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {',\n    '\t\t\t\t\t\tif (iter >= nsteps)',\n    '\t\t\t\t\t\t\t\tbreak;',\n    // Sample from the 3D texture\n    '\t\t\t\t\t\tfloat val = sample1(loc);',\n    // Apply MIP operation\n    '\t\t\t\t\t\tif (val > max_val) {',\n    '\t\t\t\t\t\t\t\tmax_val = val;',\n    '\t\t\t\t\t\t\t\tmax_i = iter;',\n    '\t\t\t\t\t\t}',\n    // Advance location deeper into the volume\n    '\t\t\t\t\t\tloc += step;',\n    '\t\t\t\t}',\n\n    // Refine location, gives crispier images\n    '\t\t\t\tvec3 iloc = start_loc + step * (float(max_i) - 0.5);',\n    '\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);',\n    '\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {',\n    '\t\t\t\t\t\tmax_val = max(max_val, sample1(iloc));',\n    '\t\t\t\t\t\tiloc += istep;',\n    '\t\t\t\t}',\n\n    // Resolve final color\n    '\t\t\t\tgl_FragColor = apply_colormap(max_val);',\n    '\t\t}',\n\n    '\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {',\n\n    '\t\t\t\tgl_FragColor = vec4(0.0);\t// init transparent',\n    '\t\t\t\tvec4 color3 = vec4(0.0);\t// final color',\n    '\t\t\t\tvec3 dstep = 1.5 / u_size;\t// step to sample derivative',\n    '\t\t\t\tvec3 loc = start_loc;',\n\n    '\t\t\t\tfloat low_threshold = u_renderthreshold - 0.02 * (u_clim[1] - u_clim[0]);',\n\n    // Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n    // non-constant expression. So we use a hard-coded max, and an additional condition\n    // inside the loop.\n    '\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {',\n    '\t\t\t\t\t\tif (iter >= nsteps)',\n    '\t\t\t\t\t\t\t\tbreak;',\n\n    // Sample from the 3D texture\n    '\t\t\t\t\t\tfloat val = sample1(loc);',\n\n    '\t\t\t\t\t\tif (val > low_threshold) {',\n    // Take the last interval in smaller steps\n    '\t\t\t\t\t\t\t\tvec3 iloc = loc - 0.5 * step;',\n    '\t\t\t\t\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);',\n    '\t\t\t\t\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {',\n    '\t\t\t\t\t\t\t\t\t\tval = sample1(iloc);',\n    '\t\t\t\t\t\t\t\t\t\tif (val > u_renderthreshold) {',\n    '\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = add_lighting(val, iloc, dstep, view_ray);',\n    '\t\t\t\t\t\t\t\t\t\t\t\treturn;',\n    '\t\t\t\t\t\t\t\t\t\t}',\n    '\t\t\t\t\t\t\t\t\t\tiloc += istep;',\n    '\t\t\t\t\t\t\t\t}',\n    '\t\t\t\t\t\t}',\n\n    // Advance location deeper into the volume\n    '\t\t\t\t\t\tloc += step;',\n    '\t\t\t\t}',\n    '\t\t}',\n\n    '\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray)',\n    '\t\t{',\n    // Calculate color by incorporating lighting\n\n    // View direction\n    '\t\t\t\tvec3 V = normalize(view_ray);',\n\n    // calculate normal vector from gradient\n    '\t\t\t\tvec3 N;',\n    '\t\t\t\tfloat val1, val2;',\n    '\t\t\t\tval1 = sample1(loc + vec3(-step[0], 0.0, 0.0));',\n    '\t\t\t\tval2 = sample1(loc + vec3(+step[0], 0.0, 0.0));',\n    '\t\t\t\tN[0] = val1 - val2;',\n    '\t\t\t\tval = max(max(val1, val2), val);',\n    '\t\t\t\tval1 = sample1(loc + vec3(0.0, -step[1], 0.0));',\n    '\t\t\t\tval2 = sample1(loc + vec3(0.0, +step[1], 0.0));',\n    '\t\t\t\tN[1] = val1 - val2;',\n    '\t\t\t\tval = max(max(val1, val2), val);',\n    '\t\t\t\tval1 = sample1(loc + vec3(0.0, 0.0, -step[2]));',\n    '\t\t\t\tval2 = sample1(loc + vec3(0.0, 0.0, +step[2]));',\n    '\t\t\t\tN[2] = val1 - val2;',\n    '\t\t\t\tval = max(max(val1, val2), val);',\n\n    '\t\t\t\tfloat gm = length(N); // gradient magnitude',\n    '\t\t\t\tN = normalize(N);',\n\n    // Flip normal so it points towards viewer\n    '\t\t\t\tfloat Nselect = float(dot(N, V) > 0.0);',\n    '\t\t\t\tN = (2.0 * Nselect - 1.0) * N;\t// ==\tNselect * N - (1.0-Nselect)*N;',\n\n    // Init colors\n    '\t\t\t\tvec4 ambient_color = vec4(0.0, 0.0, 0.0, 0.0);',\n    '\t\t\t\tvec4 diffuse_color = vec4(0.0, 0.0, 0.0, 0.0);',\n    '\t\t\t\tvec4 specular_color = vec4(0.0, 0.0, 0.0, 0.0);',\n\n    // note: could allow multiple lights\n    '\t\t\t\tfor (int i=0; i<1; i++)',\n    '\t\t\t\t{',\n    // Get light direction (make sure to prevent zero devision)\n    '\t\t\t\t\t\tvec3 L = normalize(view_ray);\t//lightDirs[i];',\n    '\t\t\t\t\t\tfloat lightEnabled = float( length(L) > 0.0 );',\n    '\t\t\t\t\t\tL = normalize(L + (1.0 - lightEnabled));',\n\n    // Calculate lighting properties\n    '\t\t\t\t\t\tfloat lambertTerm = clamp(dot(N, L), 0.0, 1.0);',\n    '\t\t\t\t\t\tvec3 H = normalize(L+V); // Halfway vector',\n    '\t\t\t\t\t\tfloat specularTerm = pow(max(dot(H, N), 0.0), shininess);',\n\n    // Calculate mask\n    '\t\t\t\t\t\tfloat mask1 = lightEnabled;',\n\n    // Calculate colors\n    '\t\t\t\t\t\tambient_color +=\tmask1 * ambient_color;\t// * gl_LightSource[i].ambient;',\n    '\t\t\t\t\t\tdiffuse_color +=\tmask1 * lambertTerm;',\n    '\t\t\t\t\t\tspecular_color += mask1 * specularTerm * specular_color;',\n    '\t\t\t\t}',\n\n    // Calculate final color by componing different components\n    '\t\t\t\tvec4 final_color;',\n    '\t\t\t\tvec4 color = apply_colormap(val);',\n    '\t\t\t\tfinal_color = color * (ambient_color + diffuse_color) + specular_color;',\n    '\t\t\t\tfinal_color.a = color.a;',\n    '\t\t\t\treturn final_color;',\n    '\t\t}',\n  ].join('\\n'),\n}\n"},"lineCount":null}},"error":null,"hash":"ab3cb954a338f0003c79cfd7ec60be47","cacheData":{"env":{}}}